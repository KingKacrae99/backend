{
  "swagger": "2.0",
  "info": {
    "title": "Business Mgt API",
    "description": "Inventory and Billing Web Services (Backend)",
    "version": "1.0.0"
  },
  "host": "business-mgt-api.onrender.com",
  "basePath": "/",
  "schemes": ["https"],
  "consumes": ["application/json"],
  "produces": ["application/json"],
  "paths": {
    "/": {
      "get": {
        "description": "API root endpoint",
        "responses": {
          "200": { "description": "API is running successfully" },
          "default": { "description": "" }
        }
      }
    },
    "/auth/google": {
      "get": {
        "description": "Authenticate user using Google OAuth",
        "responses": {
          "200": { "description": "Redirect to Google login page" },
          "default": { "description": "" }
        }
      }
    },
    "/auth/google/callback": {
      "get": {
        "description": "Handle Google OAuth callback",
        "responses": {
          "200": { "description": "Authentication successful" },
          "default": { "description": "" }
        }
      }
    },
    "/auth/status": {
      "get": {
        "description": "LoggedIn Status for authenticated user",
        "responses": {
          "200": { "description": "LoggedIn successfully" },
          "401": { "description": "Unauthorized" }
        }
      }
    },
    "/auth/logout": {
      "get": {
        "description": "Logout the currently authenticated user",
        "responses": {
          "200": { "description": "Logged out successfully" },
          "401": { "description": "Unauthorized" }
        }
      }
    },
    "/user/": {
      "get": {
        "description": "Get all registered users",
        "responses": {
          "200": {
            "description": "List of all users",
            "schema": {
              "type": "array",
              "items": { "$ref": "#/definitions/User" }
            }
          },
          "401": { "description": "Unauthorized" }
        }
      }
    },
    "/user/{id}": {
      "get": {
        "description": "Get user details by ID",
        "parameters": [{ "name": "id", "in": "path", "required": true, "type": "string" }],
        "responses": {
          "200": { "description": "User details retrieved successfully" },
          "401": { "description": "Unauthorized" }
        }
      },
      "put": {
        "description": "Update a user's details",
        "parameters": [
          { "name": "id", "in": "path", "required": true, "type": "string" },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": { "$ref": "#/definitions/User" }
          }
        ],
        "responses": {
          "200": { "description": "User updated successfully", "schema": { "$ref": "#/definitions/User" } },
          "400": { "description": "Bad Request" },
          "401": { "description": "Unauthorized" }
        }
      },
      "delete": {
        "description": "Delete a user by ID",
        "parameters": [{ "name": "id", "in": "path", "required": true, "type": "string" }],
        "responses": {
          "200": { "description": "User deleted successfully" },
          "401": { "description": "Unauthorized" }
        }
      }
    },
    "/products/": {
      "get": {
        "description": "Fetch all products",
        "responses": {
          "200": {
            "description": "List of products retrieved successfully",
            "schema": {
              "type": "array",
              "items": { "$ref": "#/definitions/Product" }
            }
          },
          "401": { "description": "Unauthorized" }
        }
      }
    },
    "/products/{id}": {
      "get": {
        "description": "Get a product by ID",
        "parameters": [{ "name": "id", "in": "path", "required": true, "type": "string" }],
        "responses": {
          "200": { "description": "Product retrieved successfully", "schema": { "$ref": "#/definitions/Product" } },
          "401": { "description": "Unauthorized" }
        }
      }
    },
    "/products/add": {
      "post": {
        "description": "Add a new product",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": { "$ref": "#/definitions/Product" }
          }
        ],
        "responses": {
          "201": {
            "description": "Product created successfully",
            "schema": { "$ref": "#/definitions/Product" }
          },
          "400": { "description": "Bad Request" },
          "401": { "description": "Unauthorized" }
        }
      }
    },
    "/products/edit/{id}": {
      "put": {
        "description": "Edit a product by ID",
        "parameters": [
          { "name": "id", "in": "path", "required": true, "type": "string" },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": { "$ref": "#/definitions/Product" }
          }
        ],
        "responses": {
          "200": { "description": "Product updated successfully", "schema": { "$ref": "#/definitions/Product" } },
          "400": { "description": "Bad Request" },
          "401": { "description": "Unauthorized" }
        }
      }
    },
    "/products/delete/{id}": {
      "delete": {
        "description": "Delete a product by ID",
        "parameters": [{ "name": "id", "in": "path", "required": true, "type": "string" }],
        "responses": {
          "200": { "description": "Product deleted successfully" },
          "401": { "description": "Unauthorized" }
        }
      }
    },
    "/category/": {
      "get": {
        "description": "Get all categories",
        "responses": {
          "200": {
            "description": "Categories retrieved successfully",
            "schema": {
              "type": "array",
              "items": { "$ref": "#/definitions/Category" }
            }
          },
          "default": { "description": "" }
        }
      }
    },
    "/category/{id}": {
      "get": {
        "description": "Get a category by ID",
        "parameters": [{ "name": "id", "in": "path", "required": true, "type": "string" }],
        "responses": {
          "200": { "description": "Category retrieved successfully", "schema": { "$ref": "#/definitions/Category" } },
          "default": { "description": "" }
        }
      }
    },
    "/category/add": {
      "post": {
        "description": "Add a new category",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": { "$ref": "#/definitions/Category" }
          }
        ],
        "responses": {
          "201": {
            "description": "Category created successfully",
            "schema": { "$ref": "#/definitions/Category" }
          },
          "400": { "description": "Bad Request" },
          "401": { "description": "Unauthorized" }
        }
      }
    },
    "/category/update/{id}": {
      "put": {
        "description": "Update a category by ID",
        "parameters": [
          { "name": "id", "in": "path", "required": true, "type": "string" },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": { "$ref": "#/definitions/Category" }
          }
        ],
        "responses": {
          "200": { "description": "Category updated successfully", "schema": { "$ref": "#/definitions/Category" } },
          "400": { "description": "Bad Request" },
          "401": { "description": "Unauthorized" }
        }
      }
    },
    "/category/delete/{id}": {
      "delete": {
        "description": "Delete a category by ID",
        "parameters": [{ "name": "id", "in": "path", "required": true, "type": "string" }],
        "responses": {
          "200": { "description": "Category deleted successfully" },
          "401": { "description": "Unauthorized" }
        }
      }
    },
    "/orders/": {
      "get": {
        "description": "Get all orders",
        "responses": {
          "200": {
            "description": "Orders retrieved successfully",
            "schema": {
              "type": "array",
              "items": { "$ref": "#/definitions/Order" }
            }
          },
          "401": { "description": "Unauthorized" }
        }
      }
    },
    "/orders/{id}": {
      "get": {
        "description": "Get an order by ID",
        "parameters": [{ "name": "id", "in": "path", "required": true, "type": "string" }],
        "responses": {
          "200": { "description": "Order retrieved successfully", "schema": { "$ref": "#/definitions/Order" } },
          "401": { "description": "Unauthorized" }
        }
      }
    },
    "/orders/update/{id}": {
      "put": {
        "description": "Update an order by ID",
        "parameters": [
          { "name": "id", "in": "path", "required": true, "type": "string" },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": { "$ref": "#/definitions/Order" }
          }
        ],
        "responses": {
          "200": { "description": "Order updated successfully", "schema": { "$ref": "#/definitions/Order" } },
          "400": { "description": "Bad Request" },
          "401": { "description": "Unauthorized" }
        }
      }
    },
    "/orders/add": {
      "post": {
        "description": "Add a new order",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": { "$ref": "#/definitions/Order" }
          }
        ],
        "responses": {
          "201": {
            "description": "Order created successfully",
            "schema": { "$ref": "#/definitions/Order" }
          },
          "400": { "description": "Bad Request" },
          "401": { "description": "Unauthorized" }
        }
      }
    },
    "/orders/delete/{id}": {
      "delete": {
        "description": "Delete an order by ID",
        "parameters": [{ "name": "id", "in": "path", "required": true, "type": "string" }],
        "responses": {
          "200": { "description": "Order deleted successfully" },
          "401": { "description": "Unauthorized" }
        }
      }
    },
    "/suppliers/add": {
      "post": {
        "description": "Add a new supplier",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": { "$ref": "#/definitions/Supplier" }
          }
        ],
        "responses": {
          "201": {
            "description": "Supplier created successfully",
            "schema": { "$ref": "#/definitions/Supplier" }
          },
          "400": { "description": "Bad Request" },
          "401": { "description": "Unauthorized" }
        }
      }
    },
    "/suppliers/update/{id}": {
      "put": {
        "description": "Update a supplier by ID",
        "parameters": [
          { "name": "id", "in": "path", "required": true, "type": "string" },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": { "$ref": "#/definitions/Supplier" }
          }
        ],
        "responses": {
          "200": { "description": "Supplier updated successfully", "schema": { "$ref": "#/definitions/Supplier" } },
          "400": { "description": "Bad Request" },
          "401": { "description": "Unauthorized" }
        }
      }
    },
    "/suppliers/{id}": {
      "get": {
        "description": "Get a supplier by ID",
        "parameters": [{ "name": "id", "in": "path", "required": true, "type": "string" }],
        "responses": {
          "200": { "description": "Supplier retrieved successfully", "schema": { "$ref": "#/definitions/Supplier" } },
          "401": { "description": "Unauthorized" }
        }
      }
    },
    "/suppliers/delete/{id}": {
      "delete": {
        "description": "Delete a supplier by ID",
        "parameters": [{ "name": "id", "in": "path", "required": true, "type": "string" }],
        "responses": {
          "200": { "description": "Supplier deleted successfully" },
          "401": { "description": "Unauthorized" }
        }
      }
    },
    "/audits/": {
      "get": {
        "description": "Get all audit logs",
        "responses": {
          "200": { "description": "Audit logs retrieved successfully", "schema": { "type": "array", "items": { "$ref": "#/definitions/Audit" } } },
          "401": { "description": "Unauthorized" }
        }
      }
    },
    "/audits/{id}": {
      "get": {
        "description": "Get an audit log by ID",
        "parameters": [{ "name": "id", "in": "path", "required": true, "type": "string" }],
        "responses": {
          "200": { "description": "Audit log retrieved successfully", "schema": { "$ref": "#/definitions/Audit" } },
          "401": { "description": "Unauthorized" }
        }
      }
    },
    "/audits/update/{id}": {
      "put": {
        "description": "Update an audit record by ID",
        "parameters": [
          { "name": "id", "in": "path", "required": true, "type": "string" },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": { "$ref": "#/definitions/Audit" }
          }
        ],
        "responses": {
          "200": { "description": "Audit updated successfully", "schema": { "$ref": "#/definitions/Audit" } },
          "401": { "description": "Unauthorized" }
        }
      }
    },
    "/audits/delete/{id}": {
      "delete": {
        "description": "Delete an audit log by ID",
        "parameters": [{ "name": "id", "in": "path", "required": true, "type": "string" }],
        "responses": {
          "200": { "description": "Audit log deleted successfully" },
          "401": { "description": "Unauthorized" }
        }
      }
    }
  },
  "definitions": {
    "User": {
      "type": "object",
      "properties": {
        "googleId": { "type": "string", "example": "1234567890abcdef" },
        "fullName": { "type": "string", "example": "John Doe" },
        "email": { "type": "string", "example": "johndoe@example.com" },
        "picture": { "type": "string", "example": "https://example.com/avatar.jpg" },
        "local": { "type": "string", "example": "en-US" },
        "locale": { "type": "string", "example": "US" },
        "role": { "type": "string", "example": "Client" },
        "joinedAt": { "type": "string", "example": "2025-10-16T00:00:00.000Z" }
      }
    },
    "Supplier": {
      "type": "object",
      "properties": {
        "name": { "type": "string", "example": "MedTech Supplies Ltd." },
        "email": { "type": "string", "example": "contact@medtech.com" },
        "phone": { "type": "string", "example": "+2348012345678" },
        "address": { "type": "string", "example": "12 Main Street, Lagos, Nigeria" },
        "productsSupplied": {
          "type": "array",
          "example": ["60d5f4832b8b4f1e9c1a1234"],
          "items": { "type": "string" }
        },
        "createdAt": { "type": "string", "example": "2025-10-16T00:00:00.000Z" },
        "updatedAt": { "type": "string", "example": "2025-10-16T00:00:00.000Z" }
      }
    },
    "Product": {
      "type": "object",
      "properties": {
        "name": { "type": "string", "example": "Paracetamol" },
        "sku": { "type": "string", "example": "PRC-001" },
        "description": { "type": "string", "example": "Pain relief tablet" },
        "category": { "type": "string", "example": "60d5f4832b8b4f1e9c1a5678" },
        "costPrice": { "type": "number", "example": 100 },
        "sellPrice": { "type": "number", "example": 150 },
        "quantity": { "type": "number", "example": 200 },
        "reorderLevel": { "type": "number", "example": 10 },
        "supplierId": { "type": "string", "example": "60d5f4832b8b4f1e9c1a1234" },
        "unit": { "type": "string", "example": "Packs" },
        "createdAt": { "type": "string", "example": "2025-10-16T00:00:00.000Z" },
        "updatedAt": { "type": "string", "example": "2025-10-16T00:00:00.000Z" }
      },
      "required": ["name", "sku"]
    },
    "OrderItem": {
      "type": "object",
      "properties": {
        "productId": { "type": "string", "example": "60d5f4832b8b4f1e9c1a5678" },
        "name": { "type": "string", "example": "Paracetamol" },
        "quantity": { "type": "number", "example": 5 },
        "price": { "type": "number", "example": 150 },
        "subtotal": { "type": "number", "example": 750 }
      },
      "required": ["productId", "quantity", "price"]
    },
    "Order": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": { "$ref": "#/definitions/OrderItem" }
        },
        "total": { "type": "number", "example": 750 },
        "tax": { "type": "number", "example": 0 },
        "discount": { "type": "number", "example": 0 },
        "status": { "type": "string", "example": "Pending" },
        "createdAt": { "type": "string", "example": "2025-10-16T00:00:00.000Z" },
        "updatedAt": { "type": "string", "example": "2025-10-16T00:00:00.000Z" }
      },
      "required": ["items", "total"]
    },
    "Category": {
      "type": "object",
      "properties": {
        "name": { "type": "string", "example": "Pharmaceuticals" }
      },
      "required": ["name"]
    },
    "Audit": {
      "type": "object",
      "properties": {
        "action": { "type": "string", "example": "CREATE_PRODUCT" },
        "userId": { "type": "string", "example": "60d5f4832b8b4f1e9c1a9999" },
        "details": { "type": "string", "example": "Created product PRC-001" },
        "createdAt": { "type": "string", "example": "2025-10-16T00:00:00.000Z" }
      },
      "required": ["action", "userId"]
    }
  }
}
